apiVersion: v1
kind: Service
metadata:
  name: orabot-service
  annotations:
    oci.oraclecloud.com/loadbalancer-policy: "IP_HASH"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local

  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
      name: backend
    - port: 81
      protocol: TCP
      targetPort: 3000
      name: frontend
  selector:
    app: orabot
---
#this is new stuff for hosting on the load balancer
apiVersion: v1
kind: Service
metadata:
  name: orabot-backend-router
spec:
  selector:
    app: orabot
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orabot-deployment
spec:
  selector:
    matchLabels:
      app: orabot
  replicas: 2
  template:
    metadata:
      labels:
        app: orabot
        version: v1
    spec:
      containers:
        - name: orabot
          image: ${DOCKER_REGISTRY}/orabot:${BUILDRUN_HASH}
          imagePullPolicy: Always
          env:
            - name: db_user
              value: "APP_DATA"
            - name: db_url
              value: "jdbc:oracle:thin:@${ORABOT_PDB_NAME}_tp?TNS_ADMIN=/talent-pentagon/creds"
            - name: driver_class_name
              value: "oracle.jdbc.OracleDriver"
            - name: OCI_REGION
              value: "${OCI_REGION}"
            - name: dbpassword
              valueFrom:
                secretKeyRef:
                  name: dbuser
                  key: dbpassword
                  optional: true
          volumeMounts:
            - name: creds
              mountPath: /talent-pentagon/creds
          ports:
            - containerPort: 8080
      restartPolicy: Always
      volumes:
        - name: creds
          secret:
            secretName: db-wallet-secret
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: orabot
---
#this is new stuff for hosting on the load balancer
apiVersion: v1
kind: Service
metadata:
  name: orabot-frontend-router
spec:
  selector:
    app: orabot
  ports:
    - protocol: TCP
      port: 81
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orabot-front-deployment
spec:
  selector:
    matchLabels:
      app: orabot
  template:
    metadata:
      labels:
        app: orabot
        version: v1
    spec:
      containers:
        - name: orabot-front
          image: ${DOCKER_REGISTRY}/orabot-front:0.1
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
      restartPolicy: Always
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: orabot
---